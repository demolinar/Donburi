{"ast":null,"code":"import users1 from \"../../data/users\";\n\nclass HashTable {\n  constructor(size) {\n    this.size = size;\n    this.array = Array(size);\n  }\n\n  hashFunction(key) {\n    let hashConst = 11;\n\n    for (let i = 0; i < key.length; i++) {\n      hashConst = 19 * hashConst * key.charCodeAt(i) % this.size;\n    }\n  }\n\n  insert(key, value) {\n    if (this.search(key) === null || this.array.length == 0) {\n      let index = this.hashFunction(key);\n\n      if (this.array[index]) {\n        this.array[index].push([key, value]);\n      } else {\n        this.array[index] = [[key, value]];\n      }\n    }\n  }\n\n  search(key) {\n    let index = this.hashFunction(key);\n    if (!this.array[index]) return null;\n    return this.array[index].find(x => x[0] === key)[1];\n  }\n\n}\n\nlet hash = new HashTable(37);\nconsole.log(hash.array);\nhash.insert(\"d\", {\n  name: 'name'\n});\nhash.insert(\"e\", {\n  name: 'name1'\n});\nconsole.log(hash.array);\nhash.insert(users1[0].firstName, users1[0]);\nconsole.log(hash.search(\"Abbot\"));\nconsole.log(hash.search(\"d\"));\nconsole.log(hash.search(\"e\"));\nexport default HashTable;","map":{"version":3,"sources":["/home/sebastian/Documents/Donburi-Donburi_Final_Delivery/src/components/DataStructures/HashTable.js"],"names":["users1","HashTable","constructor","size","array","Array","hashFunction","key","hashConst","i","length","charCodeAt","insert","value","search","index","push","find","x","hash","console","log","name","firstName"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;AACA,MAAMC,SAAN,CAAgB;AAEZC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaC,KAAK,CAACF,IAAD,CAAlB;AACH;;AAEDG,EAAAA,YAAY,CAACC,GAAD,EAAK;AACb,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,GAAG,CAACG,MAApB,EAA4BD,CAAC,EAA7B,EAAgC;AAC5BD,MAAAA,SAAS,GAAI,KAAKA,SAAL,GAAiBD,GAAG,CAACI,UAAJ,CAAeF,CAAf,CAAlB,GAAuC,KAAKN,IAAxD;AACH;AACJ;;AAEDS,EAAAA,MAAM,CAACL,GAAD,EAAMM,KAAN,EAAY;AACd,QAAG,KAAKC,MAAL,CAAYP,GAAZ,MAAqB,IAArB,IAA6B,KAAKH,KAAL,CAAWM,MAAX,IAAqB,CAArD,EAAwD;AACpD,UAAIK,KAAK,GAAG,KAAKT,YAAL,CAAkBC,GAAlB,CAAZ;;AACA,UAAI,KAAKH,KAAL,CAAWW,KAAX,CAAJ,EAAuB;AACnB,aAAKX,KAAL,CAAWW,KAAX,EAAkBC,IAAlB,CAAuB,CAACT,GAAD,EAAMM,KAAN,CAAvB;AACH,OAFD,MAEO;AACH,aAAKT,KAAL,CAAWW,KAAX,IAAoB,CAAC,CAACR,GAAD,EAAMM,KAAN,CAAD,CAApB;AACH;AACJ;AACJ;;AAEDC,EAAAA,MAAM,CAACP,GAAD,EAAK;AACP,QAAIQ,KAAK,GAAG,KAAKT,YAAL,CAAkBC,GAAlB,CAAZ;AACA,QAAG,CAAC,KAAKH,KAAL,CAAWW,KAAX,CAAJ,EACI,OAAO,IAAP;AACJ,WAAO,KAAKX,KAAL,CAAWW,KAAX,EAAkBE,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAASX,GAArC,EAA0C,CAA1C,CAAP;AACH;;AA9BW;;AAiChB,IAAIY,IAAI,GAAG,IAAIlB,SAAJ,CAAc,EAAd,CAAX;AACAmB,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACf,KAAjB;AACAe,IAAI,CAACP,MAAL,CAAY,GAAZ,EAAgB;AAACU,EAAAA,IAAI,EAAE;AAAP,CAAhB;AACAH,IAAI,CAACP,MAAL,CAAY,GAAZ,EAAgB;AAACU,EAAAA,IAAI,EAAE;AAAP,CAAhB;AACAF,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACf,KAAjB;AACAe,IAAI,CAACP,MAAL,CAAYZ,MAAM,CAAC,CAAD,CAAN,CAAUuB,SAAtB,EAAiCvB,MAAM,CAAC,CAAD,CAAvC;AACAoB,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACL,MAAL,CAAY,OAAZ,CAAZ;AACAM,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACL,MAAL,CAAY,GAAZ,CAAZ;AACAM,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACL,MAAL,CAAY,GAAZ,CAAZ;AAGA,eAAeb,SAAf","sourcesContent":["import users1 from \"../../data/users\";\nclass HashTable {\n\n    constructor(size) {\n        this.size = size;\n        this.array = Array(size);\n    }\n\n    hashFunction(key){\n        let hashConst = 11;\n        for (let i=0; i<key.length; i++){\n            hashConst = (19 * hashConst * key.charCodeAt(i)) % this.size;\n        }\n    }\n\n    insert(key, value){\n        if(this.search(key) === null || this.array.length == 0) {\n            let index = this.hashFunction(key);\n            if (this.array[index]) {\n                this.array[index].push([key, value]);\n            } else {\n                this.array[index] = [[key, value]];\n            }\n        }\n    }\n\n    search(key){\n        let index = this.hashFunction(key);\n        if(!this.array[index])\n            return null;\n        return this.array[index].find(x => x[0] === key)[1];\n    }\n}\n\nlet hash = new HashTable(37);\nconsole.log(hash.array);\nhash.insert(\"d\",{name: 'name'});\nhash.insert(\"e\",{name: 'name1'});\nconsole.log(hash.array);\nhash.insert(users1[0].firstName, users1[0]);\nconsole.log(hash.search(\"Abbot\"));\nconsole.log(hash.search(\"d\"));\nconsole.log(hash.search(\"e\"));\n\n\nexport default HashTable;"]},"metadata":{},"sourceType":"module"}