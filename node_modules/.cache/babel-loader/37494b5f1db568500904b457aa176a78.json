{"ast":null,"code":"import BST from \"../DataStructures/BST\";\nimport Node from \"../DataStructures/Node\";\nimport make_attribute from \"./make_attribute\";\nimport { array } from \"prop-types\"; //Insertar productos\n\nfunction insert_products() {\n  for (let i = 0; i <= 1000; i++) {\n    let prod = make_attribute();\n    product_tree.insert(product_tree, prod);\n  }\n}\n\nlet product_tree = new BST(); //Insertion time\n\nlet start = new Date();\nlet simulateTime = 1000;\ninsert_products();\nsetTimeout(function (argument) {\n  let end = new Date() - start;\n  console.info('Execution time (Insertion on Tree): %dms', end);\n}, simulateTime); //Search time\n\nlet start1 = new Date();\nlet simulateTime1 = 1000;\nproduct_tree.search(product_tree, \"Curry\");\nsetTimeout(function (argument) {\n  let end = new Date() - start1;\n  console.info('Execution time (Search on Tree): %dms', end);\n}, simulateTime1); //Deletion time\n\nlet start2 = new Date();\nlet simulateTime2 = 1000;\n\nfor (let j = 0; j < 2500; j++) {\n  product_tree.delete(product_tree, \"Curry\");\n}\n\nsetTimeout(function (argument) {\n  let end = new Date() - start2;\n  console.info('Execution time (Delete on Tree): %dms', end);\n}, simulateTime2);\nexport default product_tree;","map":{"version":3,"sources":["/home/sebastian/Downloads/Donburi-master/src/components/ProgramDrivers/ProductTreeDriver.js"],"names":["BST","Node","make_attribute","array","insert_products","i","prod","product_tree","insert","start","Date","simulateTime","setTimeout","argument","end","console","info","start1","simulateTime1","search","start2","simulateTime2","j","delete"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,KAAR,QAAoB,YAApB,C,CAEA;;AAEA,SAASC,eAAT,GAA0B;AACtB,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAE,IAAjB,EAAuBA,CAAC,EAAxB,EAA2B;AACvB,QAAIC,IAAI,GAAGJ,cAAc,EAAzB;AACAK,IAAAA,YAAY,CAACC,MAAb,CAAoBD,YAApB,EAAkCD,IAAlC;AACH;AACJ;;AAED,IAAIC,YAAY,GAAG,IAAIP,GAAJ,EAAnB,C,CAEA;;AACA,IAAIS,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,IAAIC,YAAY,GAAG,IAAnB;AAEAP,eAAe;AAEfQ,UAAU,CAAC,UAASC,QAAT,EAAmB;AAC1B,MAAIC,GAAG,GAAG,IAAIJ,IAAJ,KAAaD,KAAvB;AACAM,EAAAA,OAAO,CAACC,IAAR,CAAa,0CAAb,EAAyDF,GAAzD;AACH,CAHS,EAGPH,YAHO,CAAV,C,CAMA;;AACA,IAAIM,MAAM,GAAG,IAAIP,IAAJ,EAAb;AACA,IAAIQ,aAAa,GAAG,IAApB;AAEAX,YAAY,CAACY,MAAb,CAAoBZ,YAApB,EAAkC,OAAlC;AAEAK,UAAU,CAAC,UAASC,QAAT,EAAmB;AAC1B,MAAIC,GAAG,GAAG,IAAIJ,IAAJ,KAAaO,MAAvB;AACAF,EAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb,EAAsDF,GAAtD;AACH,CAHS,EAGPI,aAHO,CAAV,C,CAMA;;AACA,IAAIE,MAAM,GAAG,IAAIV,IAAJ,EAAb;AACA,IAAIW,aAAa,GAAG,IAApB;;AAEA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,IAAhB,EAAsBA,CAAC,EAAvB,EAA0B;AACtBf,EAAAA,YAAY,CAACgB,MAAb,CAAoBhB,YAApB,EAAiC,OAAjC;AACH;;AAEDK,UAAU,CAAC,UAASC,QAAT,EAAmB;AAC1B,MAAIC,GAAG,GAAG,IAAIJ,IAAJ,KAAaU,MAAvB;AACAL,EAAAA,OAAO,CAACC,IAAR,CAAa,uCAAb,EAAsDF,GAAtD;AACH,CAHS,EAGPO,aAHO,CAAV;AAMA,eAAed,YAAf","sourcesContent":["import BST from \"../DataStructures/BST\";\nimport Node from \"../DataStructures/Node\";\nimport make_attribute from \"./make_attribute\";\nimport {array} from \"prop-types\";\n\n//Insertar productos\n\nfunction insert_products(){\n    for (let i=0; i<=1000; i++){\n        let prod = make_attribute();\n        product_tree.insert(product_tree, prod);\n    }\n}\n\nlet product_tree = new BST();\n\n//Insertion time\nlet start = new Date()\nlet simulateTime = 1000\n\ninsert_products();\n\nsetTimeout(function(argument) {\n    let end = new Date() - start\n    console.info('Execution time (Insertion on Tree): %dms', end)\n}, simulateTime)\n\n\n//Search time\nlet start1 = new Date()\nlet simulateTime1 = 1000\n\nproduct_tree.search(product_tree, \"Curry\");\n\nsetTimeout(function(argument) {\n    let end = new Date() - start1\n    console.info('Execution time (Search on Tree): %dms', end)\n}, simulateTime1)\n\n\n//Deletion time\nlet start2 = new Date()\nlet simulateTime2 = 1000\n\nfor (let j=0; j<2500; j++){\n    product_tree.delete(product_tree,\"Curry\");\n}\n\nsetTimeout(function(argument) {\n    let end = new Date() - start2\n    console.info('Execution time (Delete on Tree): %dms', end)\n}, simulateTime2)\n\n\nexport default product_tree;"]},"metadata":{},"sourceType":"module"}