{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Downloads/Donburi-master/src/Context.js\";\nimport React, { Component } from \"react\";\nimport product_array_list from \"./components/ProductArrayListDriver\";\nimport product_linked_list from \"./components/ProductLinkedListDriver\";\nimport PriorityQueue from \"./components/PriorityQueue\";\nconst productDetails = {\n  productName: \"Sushi\",\n  productCode: \"Ab0303\",\n  productPrice: 21000,\n  img: \"://0\",\n  inCart: false,\n  details: \"Utamur hendrerit cu est. Nihil torquatos qui ut. Mollis malorum perfecto vix ne. \" + \"Quo id tritani discere dolores, noster eirmod ancillae an sea, ut cum debet delenit accusamus. \" + \"Duo ex oporteat imperdiet urbanitas.\"\n};\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      productsLinked: product_linked_list,\n      productDetails: productDetails,\n      shoppingCart: new PriorityQueue(),\n      productPreviewOpen: false,\n      productPreviewModel: productDetails,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let products = [];\n      product_array_list.array.forEach(item => {\n        const singleItem = { ...item\n        };\n        products = [...products, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: products\n        };\n      });\n    };\n\n    this.getItem = productName => {\n      const product = this.state.products.find(item => item.productName === productName);\n      return product;\n    };\n\n    this.handleDetail = productName => {\n      const product = this.getItem(productName);\n      this.setState(() => {\n        return {\n          productDetails: product\n        };\n      });\n    };\n\n    this.addToCart = productName => {\n      let auxProducts = [...this.state.products];\n      const index = auxProducts.indexOf(this.getItem(productName));\n      const product = auxProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.productPrice;\n      product.total = price;\n      this.state.shoppingCart.insert(product);\n      this.setState(() => {\n        return {\n          products: auxProducts,\n          shoppingCar: this.state.shoppingCart.heap\n        };\n      }, () => {\n        this.calculateTotal();\n      });\n    };\n\n    this.openProductPreview = productName => {\n      const product = this.getItem(productName);\n      this.setState(() => {\n        return {\n          productPreviewModel: product,\n          productPreviewOpen: true\n        };\n      });\n    };\n\n    this.closeProductPreview = () => {\n      this.setState(() => {\n        return {\n          productPreviewOpen: false\n        };\n      });\n    };\n\n    this.addQuantity = productName => {\n      const product = this.getItem(productName);\n      product.count++;\n      this.setState(() => {\n        return {\n          productDetails: product\n        };\n      });\n    };\n\n    this.decreaseQuantity = productName => {\n      const product = this.getItem(productName);\n\n      if (product.count === 0) {\n        product.count = 0;\n      } else {\n        product.count--;\n      }\n\n      this.setState(() => {\n        return {\n          productDetails: product\n        };\n      });\n    };\n\n    this.removeItem = productName => {};\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          shoppingCart: new PriorityQueue()\n        };\n      }, () => {\n        this.setProducts();\n        this.calculateTotal();\n      });\n    };\n\n    this.calculateTotal = () => {\n      let subTotal = 0;\n      this.state.shoppingCart.heap.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.19;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        addToCart: this.addToCart,\n        handleDetail: this.handleDetail,\n        openProductPreview: this.openProductPreview,\n        closeProductPreview: this.closeProductPreview,\n        addQuantity: this.addQuantity,\n        decreaseQuantity: this.decreaseQuantity,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/sebastian/Downloads/Donburi-master/src/Context.js"],"names":["React","Component","product_array_list","product_linked_list","PriorityQueue","productDetails","productName","productCode","productPrice","img","inCart","details","ProductContext","createContext","ProductProvider","state","products","productsLinked","shoppingCart","productPreviewOpen","productPreviewModel","cartSubTotal","cartTax","cartTotal","setProducts","array","forEach","item","singleItem","setState","getItem","product","find","handleDetail","addToCart","auxProducts","index","indexOf","count","price","total","insert","shoppingCar","heap","calculateTotal","openProductPreview","closeProductPreview","addQuantity","decreaseQuantity","removeItem","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","cartSubtotal","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport product_array_list from \"./components/ProductArrayListDriver\";\nimport product_linked_list from \"./components/ProductLinkedListDriver\";\nimport PriorityQueue from \"./components/PriorityQueue\";\n\nconst productDetails = {\n    productName: \"Sushi\",\n    productCode: \"Ab0303\",\n    productPrice: 21000,\n    img: \"://0\",\n    inCart: false,\n    details: \"Utamur hendrerit cu est. Nihil torquatos qui ut. Mollis malorum perfecto vix ne. \" +\n        \"Quo id tritani discere dolores, noster eirmod ancillae an sea, ut cum debet delenit accusamus. \" +\n        \"Duo ex oporteat imperdiet urbanitas.\"\n}\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component{\n    state = {\n        products: [],\n        productsLinked: product_linked_list,\n        productDetails: productDetails,\n        shoppingCart: new PriorityQueue(),\n        productPreviewOpen: false,\n        productPreviewModel: productDetails,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    };\n\n    componentDidMount() {\n        this.setProducts();\n    };\n\n    setProducts = () => {\n        let products = [];\n        product_array_list.array.forEach(item => {\n            const singleItem = {...item};\n            products = [...products, singleItem];\n        })\n\n        this.setState(()=>{\n            return {products:products}\n        })\n    };\n\n    getItem = productName => {\n        const product = this.state.products.find(item => item.productName === productName);\n        return product;\n    };\n\n    handleDetail = productName => {\n        const product = this.getItem(productName);\n        this.setState(() => {\n            return {productDetails:product}\n        })\n    };\n\n    addToCart = productName => {\n        let auxProducts = [...this.state.products];\n        const index = auxProducts.indexOf(this.getItem(productName));\n        const product = auxProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.productPrice;\n        product.total = price;\n        this.state.shoppingCart.insert(product);\n        this.setState(() => {\n            return {products: auxProducts, shoppingCar: this.state.shoppingCart.heap};\n        },() => {\n            this.calculateTotal()\n        })\n    };\n\n    openProductPreview = productName => {\n        const product = this.getItem(productName);\n        this.setState(() => {\n            return {productPreviewModel: product, productPreviewOpen: true}\n        })\n    };\n\n    closeProductPreview = () => {\n        this.setState(() => {\n            return {productPreviewOpen: false}\n        })\n    };\n\n    addQuantity = productName => {\n        const product = this.getItem(productName);\n        product.count++;\n        this.setState(() => {\n            return{productDetails: product}\n        })\n    };\n\n    decreaseQuantity = productName => {\n        const product = this.getItem(productName);\n        if(product.count === 0){\n            product.count=0;\n        } else {\n            product.count--;\n        }\n        this.setState(() => {\n            return{productDetails: product}\n        })\n    };\n\n    removeItem = productName => {\n\n    };\n\n    clearCart = () => {\n        this.setState(\n            () => {\n                return {shoppingCart: new PriorityQueue()}\n            },\n            () => {\n                this.setProducts();\n                this.calculateTotal();\n            }\n        )\n    };\n\n    calculateTotal = () => {\n        let subTotal = 0;\n        this.state.shoppingCart.heap.map(item => (subTotal += item.total));\n        const tempTax = subTotal * 0.19;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(() => {\n            return{cartSubtotal: subTotal, cartTax: tax, cartTotal: total}\n        })\n    };\n\n    render() {\n        return(\n            <ProductContext.Provider value={{\n                ...this.state,\n                addToCart: this.addToCart,\n                handleDetail: this.handleDetail,\n                openProductPreview: this.openProductPreview,\n                closeProductPreview: this.closeProductPreview,\n                addQuantity: this.addQuantity,\n                decreaseQuantity: this.decreaseQuantity,\n                removeItem: this.removeItem,\n                clearCart: this.clearCart\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}