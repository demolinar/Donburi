{"ast":null,"code":"//import users1 from \"../../data/users\";\nclass HashTable {\n  constructor(size) {\n    this.size = size;\n    this.array = Array(size);\n  }\n\n  hashFunction(key) {\n    let hashConst = 11;\n\n    for (let i = 0; i < key.length; i++) {\n      hashConst = 19 * hashConst * key.charCodeAt(i) % this.size;\n    }\n  }\n\n  insert(key, value) {\n    if (!this.search(key)) {\n      let index = this.hashFunction(key);\n\n      if (this.array[index]) {\n        this.array[index].push([key, value]);\n      } else {\n        this.array[index] = [[key, value]];\n      }\n    }\n  }\n\n  search(key) {\n    let index = this.hashFunction(key);\n    if (!this.array[index]) return null;\n    return this.array[index].find(x => x[0] === key)[1];\n  }\n\n}\n\nlet hash = new HashTable(37);\nhash.insert('leon', {\n  name: 'leon',\n  phone: 123\n});\nhash.insert('dua', {\n  name: 'dua',\n  phone: 333\n});\nconsole.log(hash.search('dua')); // for(let j=0; j<users1.length; j++){\n//     hash.insert(users1[j].firstName, users1[j]);\n// }\n// console.log(hash.search('John'))\n\nexport default HashTable;","map":{"version":3,"sources":["/home/sebastian/Documents/Donburi-Donburi_Final_Delivery/src/components/DataStructures/HashTable.js"],"names":["HashTable","constructor","size","array","Array","hashFunction","key","hashConst","i","length","charCodeAt","insert","value","search","index","push","find","x","hash","name","phone","console","log"],"mappings":"AAAA;AACA,MAAMA,SAAN,CAAgB;AAEZC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaC,KAAK,CAACF,IAAD,CAAlB;AACH;;AAEDG,EAAAA,YAAY,CAACC,GAAD,EAAK;AACb,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,GAAG,CAACG,MAApB,EAA4BD,CAAC,EAA7B,EAAgC;AAC5BD,MAAAA,SAAS,GAAI,KAAKA,SAAL,GAAiBD,GAAG,CAACI,UAAJ,CAAeF,CAAf,CAAlB,GAAuC,KAAKN,IAAxD;AACH;AACJ;;AAEDS,EAAAA,MAAM,CAACL,GAAD,EAAMM,KAAN,EAAY;AACd,QAAG,CAAC,KAAKC,MAAL,CAAYP,GAAZ,CAAJ,EAAqB;AACjB,UAAIQ,KAAK,GAAG,KAAKT,YAAL,CAAkBC,GAAlB,CAAZ;;AACA,UAAI,KAAKH,KAAL,CAAWW,KAAX,CAAJ,EAAsB;AAClB,aAAKX,KAAL,CAAWW,KAAX,EAAkBC,IAAlB,CAAuB,CAACT,GAAD,EAAMM,KAAN,CAAvB;AACH,OAFD,MAEO;AACH,aAAKT,KAAL,CAAWW,KAAX,IAAoB,CAAC,CAACR,GAAD,EAAMM,KAAN,CAAD,CAApB;AACH;AACJ;AACJ;;AAEDC,EAAAA,MAAM,CAACP,GAAD,EAAK;AACP,QAAIQ,KAAK,GAAG,KAAKT,YAAL,CAAkBC,GAAlB,CAAZ;AACA,QAAG,CAAC,KAAKH,KAAL,CAAWW,KAAX,CAAJ,EACI,OAAO,IAAP;AACJ,WAAO,KAAKX,KAAL,CAAWW,KAAX,EAAkBE,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAASX,GAArC,EAA0C,CAA1C,CAAP;AACH;;AA9BW;;AAiChB,IAAIY,IAAI,GAAG,IAAIlB,SAAJ,CAAc,EAAd,CAAX;AACAkB,IAAI,CAACP,MAAL,CAAY,MAAZ,EAAoB;AAACQ,EAAAA,IAAI,EAAE,MAAP;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAApB;AACAF,IAAI,CAACP,MAAL,CAAY,KAAZ,EAAmB;AAACQ,EAAAA,IAAI,EAAE,KAAP;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAAnB;AACAC,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACL,MAAL,CAAY,KAAZ,CAAZ,E,CAEA;AACA;AACA;AACA;;AAEA,eAAeb,SAAf","sourcesContent":["//import users1 from \"../../data/users\";\nclass HashTable {\n\n    constructor(size) {\n        this.size = size;\n        this.array = Array(size);\n    }\n\n    hashFunction(key){\n        let hashConst = 11;\n        for (let i=0; i<key.length; i++){\n            hashConst = (19 * hashConst * key.charCodeAt(i)) % this.size;\n        }\n    }\n\n    insert(key, value){\n        if(!this.search(key)){\n            let index = this.hashFunction(key);\n            if (this.array[index]){\n                this.array[index].push([key, value]);\n            } else {\n                this.array[index] = [[key, value]];\n            }\n        }\n    }\n\n    search(key){\n        let index = this.hashFunction(key);\n        if(!this.array[index])\n            return null;\n        return this.array[index].find(x => x[0] === key)[1];\n    }\n}\n\nlet hash = new HashTable(37);\nhash.insert('leon', {name: 'leon', phone: 123});\nhash.insert('dua', {name: 'dua', phone: 333});\nconsole.log(hash.search('dua'));\n\n// for(let j=0; j<users1.length; j++){\n//     hash.insert(users1[j].firstName, users1[j]);\n// }\n// console.log(hash.search('John'))\n\nexport default HashTable;"]},"metadata":{},"sourceType":"module"}