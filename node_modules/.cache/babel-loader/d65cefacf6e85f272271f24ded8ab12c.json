{"ast":null,"code":"import GenericArrayList from \"./GenericArrayList\";\nimport Product from \"./Product\"; //Funciones que insertan productos aleatorios a un GenericArrayList\n\nfunction make_attribute(length, attribute) {\n  let result = '';\n  let numbers = '0123456789';\n  let code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-';\n  let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let charactersLength = characters.length;\n\n  for (let i = 0; i < length; i++) {\n    if (attribute === 'name') {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    } else if (attribute === 'code') {\n      result += code.charAt(Math.floor(Math.random() * charactersLength));\n    } else if (attribute === 'price') {\n      result += numbers.charAt(Math.floor(Math.random() * charactersLength));\n    }\n  }\n\n  return result;\n} //Insertar productos\n\n\nfunction insert_products() {\n  for (let i = 0; i <= product_array_list.size; i++) {\n    let name = make_attribute(8, 'name');\n    let code = make_attribute(4, 'code');\n    let price_length = Math.floor(Math.random() * 999 + 5);\n    let price = make_attribute(price_length, 'price');\n    let product = new Product(name, code, price);\n    product_array_list.insert(product);\n  }\n} //Cambie el tama침o del GenericArrayList. Con mas de 300 Objetos se me cuelga el PC :(\n\n\nlet product_array_list = new GenericArrayList(10);\ninsert_products(); //Imprime el tiempo de ejecuci칩n\n\n/*\nlet start = new Date()\nlet hrstart = process.hrtime()\nlet simulateTime = 5\n\nsetTimeout(function(argument) {\n    let end = new Date() - start,\n        hrend = process.hrtime(hrstart)\n    console.info('Execution time (hr): %ds %dms', hrend[0], hrend[1] / 1000000)\n}, simulateTime)\n*/\n\nexport default product_array_list;","map":{"version":3,"sources":["/home/sebastian/Documents/donburi_react_app/src/components/ProductArrayListDriver.js"],"names":["GenericArrayList","Product","make_attribute","length","attribute","result","numbers","code","characters","charactersLength","i","charAt","Math","floor","random","insert_products","product_array_list","size","name","price_length","price","product","insert"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,SAAhC,EAA2C;AACvC,MAAIC,MAAM,GAAa,EAAvB;AACA,MAAIC,OAAO,GAAY,YAAvB;AACA,MAAIC,IAAI,GAAe,uCAAvB;AACA,MAAIC,UAAU,GAAS,gEAAvB;AACA,MAAIC,gBAAgB,GAAGD,UAAU,CAACL,MAAlC;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAApB,EAA4BO,CAAC,EAA7B,EAAkC;AAC9B,QAAGN,SAAS,KAAG,MAAf,EAAsB;AAClBC,MAAAA,MAAM,IAAIG,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAlB,CAAV;AACH,KAFD,MAEO,IAAIL,SAAS,KAAG,MAAhB,EAAuB;AAC1BC,MAAAA,MAAM,IAAIE,IAAI,CAACI,MAAL,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAZ,CAAV;AACH,KAFM,MAEA,IAAIL,SAAS,KAAG,OAAhB,EAAwB;AAC3BC,MAAAA,MAAM,IAAIC,OAAO,CAACK,MAAR,CAAeC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,gBAA3B,CAAf,CAAV;AACH;AACJ;;AACD,SAAOJ,MAAP;AACH,C,CAED;;;AACA,SAASU,eAAT,GAA0B;AACtB,OAAK,IAAIL,CAAC,GAAC,CAAX,EAAcA,CAAC,IAAEM,kBAAkB,CAACC,IAApC,EAA0CP,CAAC,EAA3C,EAA8C;AAC1C,QAAIQ,IAAI,GAAGhB,cAAc,CAAC,CAAD,EAAG,MAAH,CAAzB;AACA,QAAIK,IAAI,GAAGL,cAAc,CAAC,CAAD,EAAG,MAAH,CAAzB;AACA,QAAIiB,YAAY,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAe,GAAf,GAAoB,CAA/B,CAAnB;AACA,QAAIM,KAAK,GAAGlB,cAAc,CAACiB,YAAD,EAAc,OAAd,CAA1B;AACA,QAAIE,OAAO,GAAG,IAAIpB,OAAJ,CAAYiB,IAAZ,EAAkBX,IAAlB,EAAwBa,KAAxB,CAAd;AACAJ,IAAAA,kBAAkB,CAACM,MAAnB,CAA0BD,OAA1B;AACH;AACJ,C,CAED;;;AACA,IAAIL,kBAAkB,GAAG,IAAIhB,gBAAJ,CAAqB,EAArB,CAAzB;AAEAe,eAAe,G,CAEf;;AACA;;;;;;;;;;;;AAcA,eAAeC,kBAAf","sourcesContent":["import GenericArrayList from \"./GenericArrayList\";\nimport Product from \"./Product\";\n\n//Funciones que insertan productos aleatorios a un GenericArrayList\n\nfunction make_attribute(length, attribute) {\n    let result           = '';\n    let numbers          = '0123456789';\n    let code             = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-'\n    let characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n    for (let i = 0; i < length; i++ ) {\n        if(attribute==='name'){\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        } else if (attribute==='code'){\n            result += code.charAt(Math.floor(Math.random() * charactersLength));\n        } else if (attribute==='price'){\n            result += numbers.charAt(Math.floor(Math.random() * charactersLength));\n        }\n    }\n    return result;\n}\n\n//Insertar productos\nfunction insert_products(){\n    for (let i=0; i<=product_array_list.size; i++){\n        let name = make_attribute(8,'name');\n        let code = make_attribute(4,'code');\n        let price_length = Math.floor(Math.random()*(999)+5);\n        let price = make_attribute(price_length,'price');\n        let product = new Product(name, code, price);\n        product_array_list.insert(product);\n    }\n}\n\n//Cambie el tama침o del GenericArrayList. Con mas de 300 Objetos se me cuelga el PC :(\nlet product_array_list = new GenericArrayList(10);\n\ninsert_products();\n\n//Imprime el tiempo de ejecuci칩n\n/*\nlet start = new Date()\nlet hrstart = process.hrtime()\nlet simulateTime = 5\n\nsetTimeout(function(argument) {\n    let end = new Date() - start,\n        hrend = process.hrtime(hrstart)\n    console.info('Execution time (hr): %ds %dms', hrend[0], hrend[1] / 1000000)\n}, simulateTime)\n*/\n\n\n\nexport default product_array_list;"]},"metadata":{},"sourceType":"module"}