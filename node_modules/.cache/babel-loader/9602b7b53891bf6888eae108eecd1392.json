{"ast":null,"code":"import users1 from \"../../data/users\";\n\nclass HashTable {\n  constructor(size) {\n    this.size = size;\n    this.array = Array(size);\n  }\n\n  hashFunction(key) {\n    let hashConst = 17;\n\n    for (let i = 0; i < key.length; i++) {\n      hashConst = 11 * hashConst * key.charCodeAt(i) % this.size;\n    }\n\n    return hashConst;\n  }\n\n  insert(key, value) {\n    let index = this.hashFunction(key);\n\n    if (this.array[index]) {\n      this.array[index].push([key, value]);\n    } else {\n      this.array[index] = [[key, value]];\n    }\n  }\n\n  search(key) {\n    let index = this.hashFunction(key);\n\n    if (!this.array[index].find(x => x[0] === key) && typeof this.array != \"undefined\" && this.array != null && this.array.length != null && this.array.length > 0) {\n      return null;\n    }\n\n    return this.array[index].find(x => x[0] === key)[1];\n  }\n\n}\n\nlet hash = new HashTable(23);\nconsole.log(hash.array.length);\nconsole.log(hash.array); // for( let j=0; j<users1.length; j++){\n//     hash.insert(users1[j].firstName, users1[j]);\n// }\n// console.log(hash.array);\n// console.log(hash.search(\"Abbot\"));\n// console.log(hash.search(\"At\"));\n\nexport default HashTable;","map":{"version":3,"sources":["/home/sebastian/Documents/Donburi-Donburi_Final_Delivery/src/components/DataStructures/HashTable.js"],"names":["users1","HashTable","constructor","size","array","Array","hashFunction","key","hashConst","i","length","charCodeAt","insert","value","index","push","search","find","x","hash","console","log"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,kBAAnB;;AACA,MAAMC,SAAN,CAAgB;AAEZC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaC,KAAK,CAACF,IAAD,CAAlB;AACH;;AAEDG,EAAAA,YAAY,CAACC,GAAD,EAAK;AACb,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,GAAG,CAACG,MAApB,EAA4BD,CAAC,EAA7B,EAAgC;AAC5BD,MAAAA,SAAS,GAAI,KAAKA,SAAL,GAAiBD,GAAG,CAACI,UAAJ,CAAeF,CAAf,CAAlB,GAAuC,KAAKN,IAAxD;AACH;;AACD,WAAOK,SAAP;AACH;;AAEDI,EAAAA,MAAM,CAACL,GAAD,EAAMM,KAAN,EAAY;AACV,QAAIC,KAAK,GAAG,KAAKR,YAAL,CAAkBC,GAAlB,CAAZ;;AACA,QAAI,KAAKH,KAAL,CAAWU,KAAX,CAAJ,EAAuB;AACnB,WAAKV,KAAL,CAAWU,KAAX,EAAkBC,IAAlB,CAAuB,CAACR,GAAD,EAAMM,KAAN,CAAvB;AACH,KAFD,MAEO;AACH,WAAKT,KAAL,CAAWU,KAAX,IAAoB,CAAC,CAACP,GAAD,EAAMM,KAAN,CAAD,CAApB;AACH;AACR;;AAEDG,EAAAA,MAAM,CAACT,GAAD,EAAK;AACP,QAAIO,KAAK,GAAG,KAAKR,YAAL,CAAkBC,GAAlB,CAAZ;;AACA,QAAG,CAAC,KAAKH,KAAL,CAAWU,KAAX,EAAkBG,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAASX,GAArC,CAAD,IAA8C,OAAO,KAAKH,KAAZ,IAAqB,WAAnE,IACA,KAAKA,KAAL,IAAc,IADd,IAEA,KAAKA,KAAL,CAAWM,MAAX,IAAqB,IAFrB,IAGA,KAAKN,KAAL,CAAWM,MAAX,GAAoB,CAHvB,EAGyB;AACrB,aAAO,IAAP;AACH;;AACD,WAAO,KAAKN,KAAL,CAAWU,KAAX,EAAkBG,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,KAASX,GAArC,EAA0C,CAA1C,CAAP;AACH;;AAjCW;;AAoChB,IAAIY,IAAI,GAAG,IAAIlB,SAAJ,CAAc,EAAd,CAAX;AACAmB,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACf,KAAL,CAAWM,MAAvB;AACAU,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACf,KAAjB,E,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeH,SAAf","sourcesContent":["import users1 from \"../../data/users\";\nclass HashTable {\n\n    constructor(size) {\n        this.size = size;\n        this.array = Array(size);\n    }\n\n    hashFunction(key){\n        let hashConst = 17;\n        for (let i=0; i<key.length; i++){\n            hashConst = (11 * hashConst * key.charCodeAt(i)) % this.size;\n        }\n        return hashConst;\n    }\n\n    insert(key, value){\n            let index = this.hashFunction(key);\n            if (this.array[index]) {\n                this.array[index].push([key, value]);\n            } else {\n                this.array[index] = [[key, value]];\n            }\n    }\n\n    search(key){\n        let index = this.hashFunction(key);\n        if(!this.array[index].find(x => x[0] === key) && typeof this.array != \"undefined\"\n        && this.array != null\n        && this.array.length != null\n        && this.array.length > 0){\n            return null;\n        }\n        return this.array[index].find(x => x[0] === key)[1];\n    }\n}\n\nlet hash = new HashTable(23);\nconsole.log(hash.array.length)\nconsole.log(hash.array)\n// for( let j=0; j<users1.length; j++){\n//     hash.insert(users1[j].firstName, users1[j]);\n// }\n// console.log(hash.array);\n// console.log(hash.search(\"Abbot\"));\n// console.log(hash.search(\"At\"));\n\nexport default HashTable;"]},"metadata":{},"sourceType":"module"}