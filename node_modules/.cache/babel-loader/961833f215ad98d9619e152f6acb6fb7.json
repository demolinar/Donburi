{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Downloads/Donburi-master/src/Context.js\";\n\n/* Context.js: Maneja la actualización de los Detalles de los producto, así como la actualización de los precios y totales del carrito de compras.\n       ProductProvider: Contiene el estado (state) de los datos del programa, asi como las funciones de actualización.\n           getItem: Busca un producto en específico en la lista state.products, la cual permite que no se modifiquen los datos en el ArrayList original de productos.\n           addToCar: Añade un producto al carrito de compras.\n           openProductPreview: Cambia el valor de verdad de productPreviewOpen, la cual activa la vista de detalles del producto recién añadido al carrito.\n           closeProductPreview: Cambia el valor de verdad de productPreviewOpen, la cual desactiva la vista de detalles del producto recién añadido al carrito.\n           addQuantity: Aumenta la cantidad de un mismo producto dentro del carrito de compras.\n           decreaseQuantity: Disminuye la cantidad de un mismo producto dentro del carrito de compras.\n           removeItem: Remueve un producto en específico del carrito.\n           clearCart: Limpia por completo el carrito.\n           calculateTotal: calcula el subtotal, los impuestos y el total de los productos añadidos al carrito.\n*/\nimport React, { Component } from \"react\";\nimport product_array_list from \"./components/ProductArrayListDriver\";\nimport product_linked_list from \"./components/ProductLinkedListDriver\";\nimport PriorityQueue from \"./components/PriorityQueue\";\nconst productDetails = {\n  productName: \"Sushi\",\n  productCode: \"Ab0303\",\n  productPrice: 21000,\n  img: \"://0\",\n  inCart: false,\n  details: \"Utamur hendrerit cu est. Nihil torquatos qui ut. Mollis malorum perfecto vix ne. \" + \"Quo id tritani discere dolores, noster eirmod ancillae an sea, ut cum debet delenit accusamus. \" + \"Duo ex oporteat imperdiet urbanitas.\"\n};\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      productsLinked: product_linked_list,\n      productDetails: productDetails,\n      shoppingCart: new PriorityQueue(),\n      productPreviewOpen: false,\n      productPreviewModel: productDetails,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let products = [];\n      product_array_list.array.forEach(item => {\n        const singleItem = { ...item\n        };\n        products = [...products, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: products\n        };\n      });\n    };\n\n    this.getItem = productName => {\n      const product = this.state.products.find(item => item.productName === productName);\n      return product;\n    };\n\n    this.handleDetail = productName => {\n      const product = this.getItem(productName);\n      this.setState(() => {\n        return {\n          productDetails: product\n        };\n      });\n    };\n\n    this.addToCart = productName => {\n      let auxProducts = [...this.state.products];\n      const index = auxProducts.indexOf(this.getItem(productName));\n      const product = auxProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.productPrice;\n      product.total = price;\n      this.state.shoppingCart.insert(product);\n      this.setState(() => {\n        return {\n          products: auxProducts,\n          shoppingCar: this.state.shoppingCart\n        };\n      }, () => {\n        this.calculateTotal();\n      });\n    };\n\n    this.openProductPreview = productName => {\n      const product = this.getItem(productName);\n      this.setState(() => {\n        return {\n          productPreviewModel: product,\n          productPreviewOpen: true\n        };\n      });\n    };\n\n    this.closeProductPreview = () => {\n      this.setState(() => {\n        return {\n          productPreviewOpen: false\n        };\n      });\n    };\n\n    this.addQuantity = productName => {\n      let tempCart = this.state.shoppingCart;\n      const selectedProduct = tempCart.heap.find(item => item[0].productName === productName);\n      const index = tempCart.heap.indexOf(selectedProduct);\n      const product = tempCart.heap[index];\n      product[0].count++;\n      product[0].total = product[0].count * product[0].productPrice;\n      this.setState(() => {\n        return {\n          shoppingCart: tempCart\n        };\n      }, () => {\n        this.calculateTotal();\n      });\n    };\n\n    this.decreaseQuantity = productName => {\n      let tempCart = this.state.shoppingCart;\n      const selectedProduct = tempCart.heap.find(item => item[0].productName === productName);\n      const index = tempCart.heap.indexOf(selectedProduct);\n      const product = tempCart.heap[index];\n\n      if (product[0].count === 0) {\n        product[0].count = 0;\n      } else {\n        product[0].count = product[0].count - 1;\n        product[0].total = product[0].count * product[0].productPrice;\n        this.setState(() => {\n          return {\n            shoppingCart: tempCart\n          };\n        }, () => {\n          this.calculateTotal();\n        });\n      }\n    };\n\n    this.removeItem = productName => {\n      let auxProducts = [...this.state.products];\n      let tempCart = this.state.shoppingCart;\n      tempCart = tempCart.heap.filter(item => item[0].productName !== productName);\n      const index = auxProducts.indexOf(this.getItem(productName));\n      let removed = auxProducts[index];\n      removed.inCart = false;\n      removed.total = 0;\n      removed.count = 0; //eslint-disable-next-l\n\n      this.state.shoppingCart.heap = tempCart; // for (let i = 0; i<tempCart.length; i++){\n      //     this.state.shoppingCart.insert(tempCart[i]);\n      // }\n\n      this.setState(() => {\n        return {\n          shoppingCart: this.state.shoppingCart,\n          products: [...auxProducts]\n        };\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          shoppingCart: new PriorityQueue()\n        };\n      }, () => {\n        this.setProducts();\n        this.calculateTotal();\n      });\n    };\n\n    this.calculateTotal = () => {\n      let subTotal = 0;\n      this.state.shoppingCart.heap.map(item => subTotal += item[0].total);\n      const tempTax = subTotal * 0.19;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        addToCart: this.addToCart,\n        handleDetail: this.handleDetail,\n        openProductPreview: this.openProductPreview,\n        closeProductPreview: this.closeProductPreview,\n        addQuantity: this.addQuantity,\n        decreaseQuantity: this.decreaseQuantity,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/sebastian/Downloads/Donburi-master/src/Context.js"],"names":["React","Component","product_array_list","product_linked_list","PriorityQueue","productDetails","productName","productCode","productPrice","img","inCart","details","ProductContext","createContext","ProductProvider","state","products","productsLinked","shoppingCart","productPreviewOpen","productPreviewModel","cartSubTotal","cartTax","cartTotal","setProducts","array","forEach","item","singleItem","setState","getItem","product","find","handleDetail","addToCart","auxProducts","index","indexOf","count","price","total","insert","shoppingCar","calculateTotal","openProductPreview","closeProductPreview","addQuantity","tempCart","selectedProduct","heap","decreaseQuantity","removeItem","filter","removed","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["/* Context.js: Maneja la actualización de los Detalles de los producto, así como la actualización de los precios y totales del carrito de compras.\n       ProductProvider: Contiene el estado (state) de los datos del programa, asi como las funciones de actualización.\n           getItem: Busca un producto en específico en la lista state.products, la cual permite que no se modifiquen los datos en el ArrayList original de productos.\n           addToCar: Añade un producto al carrito de compras.\n           openProductPreview: Cambia el valor de verdad de productPreviewOpen, la cual activa la vista de detalles del producto recién añadido al carrito.\n           closeProductPreview: Cambia el valor de verdad de productPreviewOpen, la cual desactiva la vista de detalles del producto recién añadido al carrito.\n           addQuantity: Aumenta la cantidad de un mismo producto dentro del carrito de compras.\n           decreaseQuantity: Disminuye la cantidad de un mismo producto dentro del carrito de compras.\n           removeItem: Remueve un producto en específico del carrito.\n           clearCart: Limpia por completo el carrito.\n           calculateTotal: calcula el subtotal, los impuestos y el total de los productos añadidos al carrito.\n*/\n\nimport React, {Component} from \"react\";\nimport product_array_list from \"./components/ProductArrayListDriver\";\nimport product_linked_list from \"./components/ProductLinkedListDriver\";\nimport PriorityQueue from \"./components/PriorityQueue\";\n\nconst productDetails = {\n    productName: \"Sushi\",\n    productCode: \"Ab0303\",\n    productPrice: 21000,\n    img: \"://0\",\n    inCart: false,\n    details: \"Utamur hendrerit cu est. Nihil torquatos qui ut. Mollis malorum perfecto vix ne. \" +\n        \"Quo id tritani discere dolores, noster eirmod ancillae an sea, ut cum debet delenit accusamus. \" +\n        \"Duo ex oporteat imperdiet urbanitas.\"\n}\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component{\n    state = {\n        products: [],\n        productsLinked: product_linked_list,\n        productDetails: productDetails,\n        shoppingCart: new PriorityQueue(),\n        productPreviewOpen: false,\n        productPreviewModel: productDetails,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    };\n\n    componentDidMount() {\n        this.setProducts();\n    };\n\n    setProducts = () => {\n        let products = [];\n        product_array_list.array.forEach(item => {\n            const singleItem = {...item};\n            products = [...products, singleItem];\n        })\n\n        this.setState(()=>{\n            return {products:products};\n        });\n    };\n\n    getItem = productName => {\n        const product = this.state.products.find(item => item.productName === productName);\n        return product;\n    };\n\n    handleDetail = productName => {\n        const product = this.getItem(productName);\n        this.setState(() => {\n            return {productDetails:product};\n        });\n    };\n\n    addToCart = productName => {\n        let auxProducts = [...this.state.products];\n        const index = auxProducts.indexOf(this.getItem(productName));\n        const product = auxProducts[index];\n\n        product.inCart = true;\n        product.count = 1;\n        const price = product.productPrice;\n        product.total = price;\n\n        this.state.shoppingCart.insert(product);\n\n        this.setState(() => {\n            return {products: auxProducts, shoppingCar: this.state.shoppingCart};\n        },() => {\n            this.calculateTotal();\n        });\n    };\n\n    openProductPreview = productName => {\n        const product = this.getItem(productName);\n        this.setState(() => {\n            return {productPreviewModel: product, productPreviewOpen: true};\n        });\n    };\n\n    closeProductPreview = () => {\n        this.setState(() => {\n            return {productPreviewOpen: false};\n        });\n    };\n\n    addQuantity = productName => {\n        let tempCart = this.state.shoppingCart;\n        const selectedProduct = tempCart.heap.find(item => item[0].productName === productName);\n        const index = tempCart.heap.indexOf(selectedProduct);\n        const product = tempCart.heap[index];\n\n        product[0].count++;\n        product[0].total = product[0].count * product[0].productPrice;\n\n        this.setState(() => {\n            return{shoppingCart: tempCart};\n        }, () => {\n            this.calculateTotal();\n        });\n    };\n\n    decreaseQuantity = productName => {\n        let tempCart = this.state.shoppingCart;\n        const selectedProduct = tempCart.heap.find(item => item[0].productName === productName);\n        const index = tempCart.heap.indexOf(selectedProduct);\n        const product = tempCart.heap[index];\n\n        if (product[0].count === 0){\n            product[0].count = 0;\n        } else {\n            product[0].count = product[0].count - 1;\n            product[0].total = product[0].count * product[0].productPrice;\n            this.setState(() => {\n                return{shoppingCart: tempCart};\n            }, () => {\n                this.calculateTotal();\n            });\n        }\n    };\n\n    removeItem = productName => {\n        let auxProducts = [...this.state.products];\n        let tempCart = this.state.shoppingCart;\n        tempCart = tempCart.heap.filter(item => item[0].productName !== productName);\n\n        const index = auxProducts.indexOf(this.getItem(productName));\n        let removed = auxProducts[index];\n        removed.inCart = false;\n        removed.total = 0;\n        removed.count = 0;\n\n        //eslint-disable-next-l\n        this.state.shoppingCart.heap = tempCart;\n        // for (let i = 0; i<tempCart.length; i++){\n        //     this.state.shoppingCart.insert(tempCart[i]);\n        // }\n\n        this.setState(() => {\n            return {shoppingCart: this.state.shoppingCart, products: [...auxProducts]}\n        });\n\n    };\n\n    clearCart = () => {\n        this.setState(\n            () => {\n                return {shoppingCart: new PriorityQueue()};\n            },\n            () => {\n                this.setProducts();\n                this.calculateTotal();\n            }\n        );\n    };\n\n    calculateTotal = () => {\n        let subTotal = 0;\n        this.state.shoppingCart.heap.map(item => (subTotal += item[0].total));\n        const tempTax = subTotal * 0.19;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(() => {\n            return{cartSubTotal: subTotal, cartTax: tax, cartTotal: total};\n        });\n    };\n\n    render() {\n        return(\n            <ProductContext.Provider value={{\n                ...this.state,\n                addToCart: this.addToCart,\n                handleDetail: this.handleDetail,\n                openProductPreview: this.openProductPreview,\n                closeProductPreview: this.closeProductPreview,\n                addQuantity: this.addQuantity,\n                decreaseQuantity: this.decreaseQuantity,\n                removeItem: this.removeItem,\n                clearCart: this.clearCart\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}