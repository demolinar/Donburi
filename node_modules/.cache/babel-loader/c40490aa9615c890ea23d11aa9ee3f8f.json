{"ast":null,"code":"var _jsxFileName = \"/home/sebastian/Documents/Donburi-Donburi_Final_Delivery/src/Context.js\";\n\n/* Context.js: Maneja la actualización de los Detalles de los producto, así como la actualización de los precios y totales del carrito de compras.\n*/\nimport React, { Component } from \"react\";\nimport product_array_list from \"./components/ProgramDrivers/ProductArrayListDriver\";\nimport product_linked_list from \"./components/ProgramDrivers/ProductLinkedListDriver\";\nimport PriorityQueue from \"./components/DataStructures/PriorityQueue\";\nimport Queue from \"./components/DataStructures/Queue\";\nimport HashTable from \"./components/DataStructures/HashTable\";\nimport product_tree from \"./components/ProgramDrivers/ProductTreeDriver\";\nimport users1 from \"./data/users\";\nconst productDetails = {\n  productName: \"Sushi\",\n  productCode: \"Ab0303\",\n  productPrice: 21000,\n  img: \"://0\",\n  inCart: false,\n  details: \"Utamur hendrerit cu est. Nihil torquatos qui ut. Mollis malorum perfecto vix ne. \" + \"Quo id tritani discere dolores, noster eirmod ancillae an sea, ut cum debet delenit accusamus. \" + \"Duo ex oporteat imperdiet urbanitas.\"\n};\nconst users = new HashTable(1000);\n\nfor (let j = 0; j < users1.length; j++) {\n  users.insert(users1[j].firstName, users1[j]);\n}\n\nconsole.log(users.array);\nlet user = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\"\n};\nconst ProductContext = React.createContext();\nconst UserContext = React.createContext(); //ProductProvider: Contiene el estado (state) de los datos del programa, asi como las funciones de actualización.\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      searchResults: [],\n      productsLinked: product_linked_list,\n      productsTree: product_tree,\n      productDetails: productDetails,\n      shoppingCartQueue: new Queue(),\n      shoppingCart: new PriorityQueue(),\n      productPreviewOpen: false,\n      productPreviewModel: productDetails,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0,\n      searchString: ''\n    };\n\n    this.setProducts = () => {\n      let products = [];\n      product_array_list.array.forEach(item => {\n        const singleItem = { ...item\n        };\n        products = [...products, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: products\n        };\n      });\n    };\n\n    this.getItem = productName => {\n      const product = this.state.products.find(item => item.productName === productName);\n      return product;\n    };\n\n    this.getSearch = () => {\n      const search = this.state.searchString;\n      return search;\n    };\n\n    this.handleDetail = productName => {\n      const product = this.getItem(productName);\n      this.setState(() => {\n        return {\n          productDetails: product\n        };\n      });\n    };\n\n    this.addToCart = productName => {\n      let auxProducts = [...this.state.products];\n      const index = auxProducts.indexOf(this.getItem(productName));\n      const product = auxProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.productPrice;\n      product.total = price;\n      this.state.shoppingCart.insert(product);\n      /*this.state.shoppingCartQueue.enqueue(product);*/\n\n      this.setState(() => {\n        return {\n          products: auxProducts,\n          shoppingCar: this.state.shoppingCart\n          /* shopṕíngCartQueue: this.state.shoppingCartQueue*/\n\n        };\n      }, () => {\n        this.calculateTotal();\n      });\n    };\n\n    this.setSearch = e => {\n      let search = e.currentTarget.value;\n      console.log(e.currentTarget.value);\n      this.setState(() => {\n        return {\n          searchString: search\n        };\n      });\n    };\n\n    this.clearSearch = () => {\n      this.setState(() => {\n        return {\n          searchString: ''\n        };\n      });\n    };\n\n    this.search = () => {\n      console.log(this.state.searchString);\n      console.log(this.getSearch);\n\n      if (this.state.searchString === '') {\n        this.setState(() => {\n          return {\n            searchResults: []\n          };\n        });\n      }\n\n      let aux = [...this.state.products];\n      let results = aux.filter(product => {\n        return product.productName.toLowerCase().indexOf(this.getSearch()) !== -1;\n      });\n      this.setState(() => {\n        return {\n          searchResults: results\n        };\n      });\n    };\n\n    this.openProductPreview = productName => {\n      const product = this.getItem(productName);\n      this.setState(() => {\n        return {\n          productPreviewModel: product,\n          productPreviewOpen: true\n        };\n      });\n    };\n\n    this.closeProductPreview = () => {\n      this.setState(() => {\n        return {\n          productPreviewOpen: false\n        };\n      });\n    };\n\n    this.addQuantity = productName => {\n      let tempCart = this.state.shoppingCart; // let tempCart1 = this.state.shoppingCartQueue;\n\n      const selectedProduct = tempCart.heap.find(item => item[0].productName === productName); // const selectedProduct1 = tempCart1.heap.find(item => item.productName === productName);\n\n      const index = tempCart.heap.indexOf(selectedProduct);\n      const product = tempCart.heap[index]; // const index1 = tempCart1.heap.indexOf(selectedProduct1)\n      // const product1 = tempCart1.heap[index1];\n\n      product[0].count++;\n      product[0].total = product[0].count * product[0].productPrice; // product1.count++;\n      // product1.total = product1.count * product1.productPrice;\n\n      this.setState(() => {\n        return {\n          shoppingCart: tempCart\n          /*shoppingCartQueue: tempCart1*/\n\n        };\n      }, () => {\n        this.calculateTotal();\n      });\n    };\n\n    this.decreaseQuantity = productName => {\n      let tempCart = this.state.shoppingCart; // let tempCart1 = this.state.shoppingCartQueue;\n\n      const selectedProduct = tempCart.heap.find(item => item[0].productName === productName); // const selectedProduct1 = tempCart1.heap.find(item => item.productName === productName);\n\n      const index = tempCart.heap.indexOf(selectedProduct);\n      const product = tempCart.heap[index]; // const index1 = tempCart1.heap.indexOf(selectedProduct1)\n      // const product1 = tempCart1.heap[index1];\n\n      if (product[0].count === 0) {\n        product[0].count = 0;\n      } else {\n        product[0].count = product[0].count - 1;\n        product[0].total = product[0].count * product[0].productPrice;\n        this.setState(() => {\n          return {\n            shoppingCart: tempCart\n          };\n        }, () => {\n          this.calculateTotal();\n        });\n      } // if (product1.count === 0){\n      //     product1.count = 0;\n      // } else {\n      //     product1.count = product1.count - 1;\n      //     product1.total = product1.count * product1.productPrice;\n      //     this.setState(() => {\n      //         return{shoppingCartQueue: tempCart1};\n      //     }, () => {\n      //         this.calculateTotal();\n      //     });\n      // }\n\n    };\n\n    this.removeItem = productName => {\n      let auxProducts = [...this.state.products];\n      let tempCart = this.state.shoppingCart;\n      tempCart = tempCart.heap.filter(item => item[0].productName !== productName);\n      const index = auxProducts.indexOf(this.getItem(productName));\n      let removed = auxProducts[index];\n      removed.inCart = false;\n      removed.total = 0;\n      removed.count = 0;\n      let newCart = new PriorityQueue();\n      newCart.heap = tempCart;\n      this.setState(() => {\n        return {\n          shoppingCart: newCart,\n          products: [...auxProducts]\n        };\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          shoppingCart: new PriorityQueue()\n        };\n      }, () => {\n        this.setProducts();\n        this.calculateTotal();\n      });\n    };\n\n    this.calculateTotal = () => {\n      let subTotal = 0;\n      this.state.shoppingCart.heap.map(item => subTotal += item[0].total);\n      const tempTax = subTotal * 0.19;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        addToCart: this.addToCart,\n        handleDetail: this.handleDetail,\n        search: this.search,\n        getSearch: this.getSearch,\n        setSearch: this.setSearch,\n        clearSearch: this.clearSearch,\n        openProductPreview: this.openProductPreview,\n        closeProductPreview: this.closeProductPreview,\n        addQuantity: this.addQuantity,\n        decreaseQuantity: this.decreaseQuantity,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nclass UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: user,\n      users: users\n    };\n\n    this.getUser = () => {\n      return this.state.user;\n    };\n\n    this.setFirstName = e => {\n      let newUser = this.getUser();\n      newUser.firstName = e.currentTarget.value;\n      this.setState(() => {\n        return {\n          user: newUser\n        };\n      });\n    };\n\n    this.setLastName = e => {\n      let newUser = this.getUser();\n      newUser.lastName = e.currentTarget.value;\n      this.setState(() => {\n        return {\n          user: newUser\n        };\n      });\n    };\n\n    this.setEmail = e => {\n      let newUser = this.getUser();\n      newUser.email = e.currentTarget.value;\n      this.setState(() => {\n        return {\n          user: newUser\n        };\n      });\n    };\n\n    this.setPassword = e => {\n      let newUser = this.getUser();\n      newUser.password = e.currentTarget.value;\n      this.setState(() => {\n        return {\n          user: newUser\n        };\n      });\n    };\n\n    this.register = () => {\n      let newUser = this.getUser();\n      this.setState(() => {\n        return {\n          users: this.state.users.insert(newUser.firstName, newUser),\n          user: user\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: { ...this.state,\n        setFirstName: this.setFirstName,\n        setLastName: this.setLastName,\n        setEmail: this.setEmail,\n        setPassword: this.setPassword,\n        register: this.register\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nconst UserConsumer = UserContext.Consumer;\nexport { ProductProvider, ProductConsumer, UserConsumer };","map":{"version":3,"sources":["/home/sebastian/Documents/Donburi-Donburi_Final_Delivery/src/Context.js"],"names":["React","Component","product_array_list","product_linked_list","PriorityQueue","Queue","HashTable","product_tree","users1","productDetails","productName","productCode","productPrice","img","inCart","details","users","j","length","insert","firstName","console","log","array","user","lastName","email","password","ProductContext","createContext","UserContext","ProductProvider","state","products","searchResults","productsLinked","productsTree","shoppingCartQueue","shoppingCart","productPreviewOpen","productPreviewModel","cartSubTotal","cartTax","cartTotal","searchString","setProducts","forEach","item","singleItem","setState","getItem","product","find","getSearch","search","handleDetail","addToCart","auxProducts","index","indexOf","count","price","total","shoppingCar","calculateTotal","setSearch","e","currentTarget","value","clearSearch","aux","results","filter","toLowerCase","openProductPreview","closeProductPreview","addQuantity","tempCart","selectedProduct","heap","decreaseQuantity","removeItem","removed","newCart","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","UserProvider","getUser","setFirstName","newUser","setLastName","setEmail","setPassword","register","ProductConsumer","Consumer","UserConsumer"],"mappings":"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","sourcesContent":["/* Context.js: Maneja la actualización de los Detalles de los producto, así como la actualización de los precios y totales del carrito de compras.\n*/\n\nimport React, {Component} from \"react\";\nimport product_array_list from \"./components/ProgramDrivers/ProductArrayListDriver\";\nimport product_linked_list from \"./components/ProgramDrivers/ProductLinkedListDriver\";\nimport PriorityQueue from \"./components/DataStructures/PriorityQueue\";\nimport Queue from \"./components/DataStructures/Queue\";\nimport HashTable from \"./components/DataStructures/HashTable\";\nimport product_tree from \"./components/ProgramDrivers/ProductTreeDriver\";\nimport users1 from \"./data/users\";\n\n\nconst productDetails = {\n    productName: \"Sushi\",\n    productCode: \"Ab0303\",\n    productPrice: 21000,\n    img: \"://0\",\n    inCart: false,\n    details: \"Utamur hendrerit cu est. Nihil torquatos qui ut. Mollis malorum perfecto vix ne. \" +\n        \"Quo id tritani discere dolores, noster eirmod ancillae an sea, ut cum debet delenit accusamus. \" +\n        \"Duo ex oporteat imperdiet urbanitas.\"\n}\n\nconst users = new HashTable(1000);\nfor( let j=0; j<users1.length; j++){\n    users.insert(users1[j].firstName, users1[j]);\n}\n\nconsole.log(users.array);\n\nlet user = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n}\n\nconst ProductContext = React.createContext();\n\nconst UserContext = React.createContext();\n\n//ProductProvider: Contiene el estado (state) de los datos del programa, asi como las funciones de actualización.\nclass ProductProvider extends Component{\n    state = {\n        products: [],\n        searchResults: [],\n        productsLinked: product_linked_list,\n        productsTree: product_tree,\n        productDetails: productDetails,\n        shoppingCartQueue: new Queue(),\n        shoppingCart: new PriorityQueue(),\n        productPreviewOpen: false,\n        productPreviewModel: productDetails,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0,\n        searchString:''\n    };\n\n    componentDidMount() {\n        this.setProducts();\n    };\n\n    //getItem: Realiza una copia del ArrayList en state.products, la cual permite que no se modifiquen los datos en el ArrayList original de productos.\n    setProducts = () => {\n        let products = [];\n        product_array_list.array.forEach(item => {\n            const singleItem = {...item};\n            products = [...products, singleItem];\n        })\n\n        this.setState(()=>{\n            return {products:products};\n        });\n    };\n\n    //getItem: Busca un producto en específico en la lista state.products, la cual permite que no se modifiquen los datos en el ArrayList original de productos.\n    getItem = productName => {\n        const product = this.state.products.find(item => item.productName === productName);\n        return product;\n    };\n\n    getSearch = () => {\n        const search = this.state.searchString;\n        return search;\n    }\n\n    //handleDetail: Gestiona los detalles de un producto dado.\n    handleDetail = productName => {\n        const product = this.getItem(productName);\n        this.setState(() => {\n            return {productDetails:product};\n        });\n    };\n\n    //addToCar: Añade un producto al carrito de compras.\n    addToCart = productName => {\n        let auxProducts = [...this.state.products];\n        const index = auxProducts.indexOf(this.getItem(productName));\n        const product = auxProducts[index];\n\n        product.inCart = true;\n        product.count = 1;\n        const price = product.productPrice;\n        product.total = price;\n\n        this.state.shoppingCart.insert(product);\n        /*this.state.shoppingCartQueue.enqueue(product);*/\n\n        this.setState(() => {\n            return {products: auxProducts, shoppingCar: this.state.shoppingCart/* shopṕíngCartQueue: this.state.shoppingCartQueue*/};\n        },() => {\n            this.calculateTotal();\n        });\n    };\n\n    setSearch = e => {\n        let search = e.currentTarget.value;\n        console.log(e.currentTarget.value);\n        this.setState(() => {\n            return {searchString: search};\n        });\n    }\n\n    clearSearch = () =>{\n        this.setState(() => {\n            return {searchString: ''};\n        });\n    }\n\n    //search: Filtra la lista de productos y devuelve el resultado\n    search = () => {\n        console.log(this.state.searchString);\n        console.log(this.getSearch);\n        if(this.state.searchString === ''){\n            this.setState(() => {\n                return {searchResults: []};\n            });\n        }\n        let aux = [...this.state.products];\n        let results = aux.filter(product => {\n            return product.productName.toLowerCase().indexOf(this.getSearch()) !== -1;\n        })\n        this.setState(() => {\n            return {searchResults: results};\n        });\n    }\n\n    //openProductPreview: Cambia el valor de verdad de productPreviewOpen, la cual activa la vista de detalles del producto recién añadido al carrito.\n    openProductPreview = productName => {\n        const product = this.getItem(productName);\n        this.setState(() => {\n            return {productPreviewModel: product, productPreviewOpen: true};\n        });\n    };\n\n    //closeProductPreview: Cambia el valor de verdad de productPreviewOpen, la cual desactiva la vista de detalles del producto recién añadido al carrito.\n    closeProductPreview = () => {\n        this.setState(() => {\n            return {productPreviewOpen: false};\n        });\n    };\n\n    //addQuantity: Aumenta la cantidad de un mismo producto dentro del carrito de compras.\n    addQuantity = productName => {\n        let tempCart = this.state.shoppingCart;\n        // let tempCart1 = this.state.shoppingCartQueue;\n\n        const selectedProduct = tempCart.heap.find(item => item[0].productName === productName);\n        // const selectedProduct1 = tempCart1.heap.find(item => item.productName === productName);\n\n        const index = tempCart.heap.indexOf(selectedProduct);\n        const product = tempCart.heap[index];\n        // const index1 = tempCart1.heap.indexOf(selectedProduct1)\n        // const product1 = tempCart1.heap[index1];\n\n        product[0].count++;\n        product[0].total = product[0].count * product[0].productPrice;\n        // product1.count++;\n        // product1.total = product1.count * product1.productPrice;\n\n        this.setState(() => {\n            return{shoppingCart: tempCart, /*shoppingCartQueue: tempCart1*/};\n        }, () => {\n            this.calculateTotal();\n        });\n    };\n\n    //decreaseQuantity: Disminuye la cantidad de un mismo producto dentro del carrito de compras.\n    decreaseQuantity = productName => {\n        let tempCart = this.state.shoppingCart;\n        // let tempCart1 = this.state.shoppingCartQueue;\n\n        const selectedProduct = tempCart.heap.find(item => item[0].productName === productName);\n        // const selectedProduct1 = tempCart1.heap.find(item => item.productName === productName);\n\n        const index = tempCart.heap.indexOf(selectedProduct);\n        const product = tempCart.heap[index];\n        // const index1 = tempCart1.heap.indexOf(selectedProduct1)\n        // const product1 = tempCart1.heap[index1];\n\n        if (product[0].count === 0){\n            product[0].count = 0;\n        } else {\n            product[0].count = product[0].count - 1;\n            product[0].total = product[0].count * product[0].productPrice;\n            this.setState(() => {\n                return{shoppingCart: tempCart};\n            }, () => {\n                this.calculateTotal();\n            });\n        }\n\n        // if (product1.count === 0){\n        //     product1.count = 0;\n        // } else {\n        //     product1.count = product1.count - 1;\n        //     product1.total = product1.count * product1.productPrice;\n        //     this.setState(() => {\n        //         return{shoppingCartQueue: tempCart1};\n        //     }, () => {\n        //         this.calculateTotal();\n        //     });\n        // }\n    };\n\n    //removeItem: Remueve un producto en específico del carrito.\n    removeItem = productName => {\n        let auxProducts = [...this.state.products];\n        let tempCart = this.state.shoppingCart;\n        tempCart = tempCart.heap.filter(item => item[0].productName !== productName);\n\n        const index = auxProducts.indexOf(this.getItem(productName));\n        let removed = auxProducts[index];\n        removed.inCart = false;\n        removed.total = 0;\n        removed.count = 0;\n\n        let newCart = new PriorityQueue();\n        newCart.heap = tempCart;\n\n\n        this.setState(() => {\n            return {shoppingCart: newCart, products: [...auxProducts]}\n        });\n\n    };\n\n    //clearCart: Limpia por completo el carrito.\n    clearCart = () => {\n        this.setState(\n            () => {\n                return {shoppingCart: new PriorityQueue()};\n            },\n            () => {\n                this.setProducts();\n                this.calculateTotal();\n            }\n        );\n    };\n\n    //calculateTotal: calcula el subtotal, los impuestos y el total de los productos añadidos al carrito.\n    calculateTotal = () => {\n        let subTotal = 0;\n        this.state.shoppingCart.heap.map(item => (subTotal += item[0].total));\n        const tempTax = subTotal * 0.19;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(() => {\n            return{cartSubTotal: subTotal, cartTax: tax, cartTotal: total};\n        });\n    };\n\n    render() {\n        return(\n            <ProductContext.Provider value={{\n                ...this.state,\n                addToCart: this.addToCart,\n                handleDetail: this.handleDetail,\n                search: this.search,\n                getSearch: this.getSearch,\n                setSearch: this.setSearch,\n                clearSearch: this.clearSearch,\n                openProductPreview: this.openProductPreview,\n                closeProductPreview: this.closeProductPreview,\n                addQuantity: this.addQuantity,\n                decreaseQuantity: this.decreaseQuantity,\n                removeItem: this.removeItem,\n                clearCart: this.clearCart\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        );\n    }\n}\n\nclass UserProvider extends  Component{\n    state = {\n        user: user,\n        users: users,\n    };\n\n\n    getUser = () => {\n        return this.state.user;\n    }\n\n    setFirstName = e => {\n        let newUser = this.getUser();\n        newUser.firstName = e.currentTarget.value;\n        this.setState(()=> {\n            return {user: newUser}\n        })\n    }\n\n    setLastName = e => {\n        let newUser = this.getUser();\n        newUser.lastName = e.currentTarget.value;\n        this.setState(()=> {\n            return {user: newUser}\n        })\n    }\n\n    setEmail = e => {\n        let newUser = this.getUser();\n        newUser.email = e.currentTarget.value;\n        this.setState(()=> {\n            return {user: newUser}\n        })\n    }\n\n    setPassword = e => {\n        let newUser = this.getUser();\n        newUser.password = e.currentTarget.value;\n        this.setState(()=> {\n            return {user: newUser}\n        })\n    }\n\n    register = () => {\n        let newUser = this.getUser();\n        this.setState( () => {\n            return {users: this.state.users.insert(newUser.firstName, newUser), user: user}\n        });\n    }\n\n    render() {\n        return(\n            <UserContext.Provider value={{\n                ...this.state,\n                setFirstName: this.setFirstName,\n                setLastName: this.setLastName,\n                setEmail: this.setEmail,\n                setPassword:this.setPassword,\n                register: this.register\n            }}>\n                {this.props.children}\n            </UserContext.Provider>\n        );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nconst UserConsumer = UserContext.Consumer;\n\nexport {ProductProvider, ProductConsumer, UserConsumer};"]},"metadata":{},"sourceType":"module"}