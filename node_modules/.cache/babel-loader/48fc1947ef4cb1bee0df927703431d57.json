{"ast":null,"code":"class HashNode {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n}\n\nclass HashTable {\n  constructor(size) {\n    this.hashGroups = size;\n    this.array = Array(size);\n  }\n\n  hashFunction(key) {\n    let hashConst = 11;\n  }\n\n  insert(key, value) {\n    const index = this.hashFunction(key);\n    this.array[index] = value;\n  }\n\n  search(key) {\n    const index = this.hashFunction(key);\n    return this.array[index];\n  }\n\n}\n\nlet hash = new HashTable(100);\nhash.insert(15, {\n  name: 'Lewis',\n  id: 1033\n});\nconsole.log(hash.search(15));\nexport default HashTable;","map":{"version":3,"sources":["/home/sebastian/Documents/Donburi-Donburi_Final_Delivery/src/components/DataStructures/HashTable.js"],"names":["HashNode","constructor","key","value","HashTable","size","hashGroups","array","Array","hashFunction","hashConst","insert","index","search","hash","name","id","console","log"],"mappings":"AACA,MAAMA,QAAN,CAAc;AACVC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAa;AACpB,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;AAJS;;AAOd,MAAMC,SAAN,CAAgB;AAEZH,EAAAA,WAAW,CAACI,IAAD,EAAO;AACd,SAAKC,UAAL,GAAkBD,IAAlB;AACA,SAAKE,KAAL,GAAaC,KAAK,CAACH,IAAD,CAAlB;AACH;;AAEDI,EAAAA,YAAY,CAACP,GAAD,EAAK;AACb,QAAIQ,SAAS,GAAG,EAAhB;AAEH;;AAEDC,EAAAA,MAAM,CAACT,GAAD,EAAMC,KAAN,EAAY;AACd,UAAMS,KAAK,GAAG,KAAKH,YAAL,CAAkBP,GAAlB,CAAd;AACA,SAAKK,KAAL,CAAWK,KAAX,IAAoBT,KAApB;AACH;;AAEDU,EAAAA,MAAM,CAACX,GAAD,EAAK;AACP,UAAMU,KAAK,GAAG,KAAKH,YAAL,CAAkBP,GAAlB,CAAd;AACA,WAAO,KAAKK,KAAL,CAAWK,KAAX,CAAP;AACH;;AApBW;;AAuBhB,IAAIE,IAAI,GAAG,IAAIV,SAAJ,CAAc,GAAd,CAAX;AACAU,IAAI,CAACH,MAAL,CAAY,EAAZ,EAAgB;AAACI,EAAAA,IAAI,EAAE,OAAP;AAAgBC,EAAAA,EAAE,EAAE;AAApB,CAAhB;AACAC,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACD,MAAL,CAAY,EAAZ,CAAZ;AAEA,eAAeT,SAAf","sourcesContent":["\nclass HashNode{\n    constructor(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n}\n\nclass HashTable {\n\n    constructor(size) {\n        this.hashGroups = size;\n        this.array = Array(size);\n    }\n\n    hashFunction(key){\n        let hashConst = 11;\n        \n    }\n\n    insert(key, value){\n        const index = this.hashFunction(key);\n        this.array[index] = value;\n    }\n\n    search(key){\n        const index = this.hashFunction(key);\n        return this.array[index];\n    }\n}\n\nlet hash = new HashTable(100);\nhash.insert(15, {name: 'Lewis', id: 1033});\nconsole.log(hash.search(15));\n\nexport default HashTable;"]},"metadata":{},"sourceType":"module"}